------------------------------------------------------------------------------
-- Provide unit testing for imagery surveys using pgTAP
------------------------------------------------------------------------------

-- Turn off echo.
\set QUIET 1

-- Format the output nicely.
\pset format unaligned
\pset tuples_only true
\pset pager

-- Revert all changes on failure.
\set ON_ERROR_ROLLBACK 1
\set ON_ERROR_STOP true


BEGIN;

CREATE EXTENSION IF NOT EXISTS pgtap;

SELECT plan(16);

-- Tests: aerial

SELECT has_schema('aerial');
SELECT has_function('aerial', 'aerial_version', 'Should have aerial_version() function in the aerial schema.');

SELECT results_eq(
    'SELECT aerial.aerial_version()',
    $$VALUES ('dev')$$,
    'aerial_version() should return dev on the master branch.'
);

-- Tests: aerial_lds

SELECT has_schema('aerial_lds');
SELECT has_table('aerial_lds', 'imagery_surveys', 'Should have imagery surveys table in the aerial_lds schema.');
SELECT has_check('aerial_lds', 'imagery_surveys', 'Should have check constraints on the imagery surveys table.');
SELECT has_index('aerial_lds', 'imagery_surveys', 'sidx_imagery_surveys', 'shape', 'Should have spatial index on the shape column of the imagery surveys table.');

PREPARE throw_imagery_valid_flight_dates AS
    INSERT INTO aerial_lds.imagery_surveys(
          name
        , imagery_id
        , index_id
        , ground_sample_distance
        , flown_from
        , flown_to
        , shape
    )
    VALUES (
          'Test imagery_valid_flight_dates'
        , 1
        , 1
        , 0.5
        , '2000-02-02'
        , '2000-01-01'
        , public.ST_GeomFromText('MULTIPOLYGON(((1750000 5425000, 1750005 5425000, 1750005 5425005, 1750000 5425005, 1750000 5425000)))', 2193)
    );

SELECT throws_ok(
      'throw_imagery_valid_flight_dates'
    , 23514
    , 'new row for relation "imagery_surveys" violates check constraint "imagery_valid_flight_dates"'
    , 'Should violate the imagery_valid_flight_dates constraint.'
);

PREPARE throw_imagery_survey_completed AS
    INSERT INTO aerial_lds.imagery_surveys(
          name
        , imagery_id
        , index_id
        , ground_sample_distance
        , flown_from
        , flown_to
        , shape
    )
    VALUES (
          'Test imagery_survey_completed'
        , 1
        , 1
        , 0.5
        , '2000-01-01'
        , '2100-02-02'
        , public.ST_GeomFromText('MULTIPOLYGON(((1750000 5425000, 1750005 5425000, 1750005 5425005, 1750000 5425005, 1750000 5425000)))', 2193)
    );

SELECT throws_ok(
      'throw_imagery_survey_completed'
    , 23514
    , 'new row for relation "imagery_surveys" violates check constraint "imagery_survey_completed"'
    , 'Should violate the imagery_survey_completed constraint.'
);

PREPARE throw_imagery_after_first_flight AS
    INSERT INTO aerial_lds.imagery_surveys(
          name
        , imagery_id
        , index_id
        , ground_sample_distance
        , flown_from
        , flown_to
        , shape
    )
    VALUES (
          'Test imagery_after_first_flight'
        , 1
        , 1
        , 0.5
        , '200-01-01'
        , '2000-02-02'
        , public.ST_GeomFromText('MULTIPOLYGON(((1750000 5425000, 1750005 5425000, 1750005 5425005, 1750000 5425005, 1750000 5425000)))', 2193)
    );

SELECT throws_ok(
      'throw_imagery_after_first_flight'
    , 23514
    , 'new row for relation "imagery_surveys" violates check constraint "imagery_after_first_flight"'
    , 'Should violate the imagery_after_first_flight constraint.'
);

SELECT has_table('aerial_lds', 'elevation_surveys', 'Should have elevation surveys table in the aerial_lds schema.');
SELECT has_check('aerial_lds', 'elevation_surveys', 'Should have check constraints on the elevation surveys table.');
SELECT has_index('aerial_lds', 'elevation_surveys', 'sidx_elevation_surveys', 'shape', 'Should have spatial index on the shape column of the elevation surveys table.');

PREPARE throw_elevation_valid_flight_dates AS
    INSERT INTO aerial_lds.elevation_surveys(
          name
        , index_id
        , flown_from
        , flown_to
        , shape
    )
    VALUES (
          'Test elevation_valid_flight_dates'
        , 1
        , '2000-02-02'
        , '2000-01-01'
        , public.ST_GeomFromText('MULTIPOLYGON(((1750000 5425000, 1750005 5425000, 1750005 5425005, 1750000 5425005, 1750000 5425000)))', 2193)
    );

SELECT throws_ok(
      'throw_elevation_valid_flight_dates'
    , 23514
    , 'new row for relation "elevation_surveys" violates check constraint "elevation_valid_flight_dates"'
    , 'Should violate the elevation_valid_flight_dates constraint.'
);

PREPARE throw_elevation_survey_completed AS
    INSERT INTO aerial_lds.elevation_surveys(
          name
        , index_id
        , flown_from
        , flown_to
        , shape
    )
    VALUES (
          'Test elevation_survey_completed'
        , 1
        , '2000-01-01'
        , '2100-02-02'
        , public.ST_GeomFromText('MULTIPOLYGON(((1750000 5425000, 1750005 5425000, 1750005 5425005, 1750000 5425005, 1750000 5425000)))', 2193)
    );

SELECT throws_ok(
      'throw_elevation_survey_completed'
    , 23514
    , 'new row for relation "elevation_surveys" violates check constraint "elevation_survey_completed"'
    , 'Should violate the elevation_survey_completed constraint.'
);

PREPARE throw_elevation_after_first_flight AS
    INSERT INTO aerial_lds.elevation_surveys(
          name
        , index_id
        , flown_from
        , flown_to
        , shape
    )
    VALUES (
          'Test elevation_after_first_flight'
        , 1
        , '200-01-01'
        , '2000-02-02'
        , public.ST_GeomFromText('MULTIPOLYGON(((1750000 5425000, 1750005 5425000, 1750005 5425005, 1750000 5425005, 1750000 5425000)))', 2193)
    );

SELECT throws_ok(
      'throw_elevation_after_first_flight'
    , 23514
    , 'new row for relation "elevation_surveys" violates check constraint "elevation_after_first_flight"'
    , 'Should violate the elevation_after_first_flight constraint.'
);

-- Finish pgTAP testing
SELECT * FROM finish();

ROLLBACK;
